plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'signing'
}

group = 'io.github.kyungmin08g'
version = '0.0.1'

java {
    withSourcesJar()
    withJavadocJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'Seaphyr'
                description = 'Spring AOP 어노테이션 기반 로깅 라이브러리'
                url = 'https://github.com/kyungmin08g/Seaphyr'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'A805F890501468426D11B27F68907778672A9038'
                        name = 'KyungMin'
                        email = 'k.kyungmin2892@gmail.com'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/kyungmin08g/Seaphyr.git'
                    developerConnection = 'scm:git:ssh://github.com/kyungmin08g/Seaphyr.git'
                    url = 'https://github.com/kyungmin08g/Seaphyr'
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = project.findProperty("ossrhUsername")
                password = project.findProperty("ossrhPassword")
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(
        System.getenv("GPG_PRIVATE_KEY"),
        System.getenv("GPG_PASSPHRASE")
    )
    sign publishing.publications.mavenJava
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:3.5.3'
    implementation 'org.springframework.boot:spring-boot-starter-aop:3.5.3'
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.5.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.0'
}

test { useJUnitPlatform() }
